Index: app/src/main/res/values/drawables.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/drawables.xml	(revision )
+++ app/src/main/res/values/drawables.xml	(revision )
@@ -0,0 +1,8 @@
+<resources xmlns:android="http://schemas.android.com/apk/res/android">
+    <item name="ic_menu_camera" type="drawable">@android:drawable/ic_menu_camera</item>
+    <item name="ic_menu_gallery" type="drawable">@android:drawable/ic_menu_gallery</item>
+    <item name="ic_menu_slideshow" type="drawable">@android:drawable/ic_menu_slideshow</item>
+    <item name="ic_menu_manage" type="drawable">@android:drawable/ic_menu_manage</item>
+    <item name="ic_menu_share" type="drawable">@android:drawable/ic_menu_share</item>
+    <item name="ic_menu_send" type="drawable">@android:drawable/ic_menu_send</item>
+</resources>
Index: app/src/main/res/layout/nav_header_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/nav_header_main.xml	(revision )
+++ app/src/main/res/layout/nav_header_main.xml	(revision )
@@ -0,0 +1,35 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="@dimen/nav_header_height"
+    android:background="@drawable/side_nav_bar"
+    android:gravity="bottom"
+    android:orientation="vertical"
+    android:paddingBottom="@dimen/activity_vertical_margin"
+    android:paddingLeft="@dimen/activity_horizontal_margin"
+    android:paddingRight="@dimen/activity_horizontal_margin"
+    android:paddingTop="@dimen/activity_vertical_margin"
+    android:theme="@style/ThemeOverlay.AppCompat.Dark">
+
+    <ImageView
+        android:id="@+id/imageView"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:paddingTop="@dimen/nav_header_vertical_spacing"
+        app:srcCompat="@android:drawable/sym_def_app_icon" />
+
+    <TextView
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:paddingTop="@dimen/nav_header_vertical_spacing"
+        android:text="Android Studio"
+        android:textAppearance="@style/TextAppearance.AppCompat.Body1" />
+
+    <TextView
+        android:id="@+id/textView"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="android.studio@android.com" />
+
+</LinearLayout>
Index: app/src/main/res/drawable-v21/ic_menu_gallery.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable-v21/ic_menu_gallery.xml	(revision )
+++ app/src/main/res/drawable-v21/ic_menu_gallery.xml	(revision )
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportHeight="24.0"
+    android:viewportWidth="24.0">
+    <path
+        android:fillColor="#FF000000"
+        android:pathData="M22,16V4c0,-1.1 -0.9,-2 -2,-2H8c-1.1,0 -2,0.9 -2,2v12c0,1.1 0.9,2 2,2h12c1.1,0 2,-0.9 2,-2zm-11,-4l2.03,2.71L16,11l4,5H8l3,-4zM2,6v14c0,1.1 0.9,2 2,2h14v-2H4V6H2z" />
+</vector>
Index: app/src/main/res/layout/app_bar_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/app_bar_main.xml	(revision )
+++ app/src/main/res/layout/app_bar_main.xml	(revision )
@@ -0,0 +1,37 @@
+<?xml version="1.0" encoding="utf-8"?>
+<android.support.design.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:fitsSystemWindows="true"
+    tools:context="com.example.admin.navi3.MainActivity">
+
+    <android.support.design.widget.AppBarLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:theme="@style/AppTheme.AppBarOverlay">
+
+        <android.support.v7.widget.Toolbar
+            android:id="@+id/toolbar"
+            android:layout_width="match_parent"
+            android:layout_height="?attr/actionBarSize"
+            android:background="?attr/colorPrimary"
+            app:popupTheme="@style/AppTheme.PopupOverlay" >
+
+           </android.support.v7.widget.Toolbar>
+
+    </android.support.design.widget.AppBarLayout>
+
+
+    <include layout="@layout/content_main" />
+
+    <!--<android.support.design.widget.FloatingActionButton-->
+        <!--android:id="@+id/fab"-->
+        <!--android:layout_width="wrap_content"-->
+        <!--android:layout_height="wrap_content"-->
+        <!--android:layout_gravity="bottom|end"-->
+        <!--android:layout_margin="@dimen/fab_margin"-->
+        <!--app:srcCompat="@android:drawable/ic_dialog_email" />-->
+
+</android.support.design.widget.CoordinatorLayout>
Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_main.xml	(revision )
+++ app/src/main/res/layout/activity_main.xml	(revision )
@@ -0,0 +1,42 @@
+<?xml version="1.0" encoding="utf-8"?>
+<android.support.v4.widget.DrawerLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:id="@+id/drawer_layout"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:fitsSystemWindows="true"
+    tools:openDrawer="start">
+
+    <include
+        layout="@layout/app_bar_main"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"/>
+
+    <android.support.design.widget.NavigationView
+        android:id="@+id/nav_view"
+        android:layout_width="wrap_content"
+        android:layout_height="match_parent"
+        android:layout_gravity="start"
+        android:fitsSystemWindows="true"
+        app:headerLayout="@layout/nav_header_main"
+        app:menu="@menu/activity_main_drawer"
+        app:elevation="17dp">
+
+        <RelativeLayout
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content">
+
+            <ImageButton
+                android:layout_width="50dp"
+                android:layout_height="50dp"
+                android:src="@android:drawable/ic_delete"
+                android:layout_marginTop="20dp"
+                android:layout_alignParentRight="true"
+                android:id="@+id/nav_colse"
+                />
+
+        </RelativeLayout>
+    </android.support.design.widget.NavigationView>
+
+</android.support.v4.widget.DrawerLayout>
Index: app/src/main/res/menu/activity_main_drawer.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/menu/activity_main_drawer.xml	(revision )
+++ app/src/main/res/menu/activity_main_drawer.xml	(revision )
@@ -0,0 +1,36 @@
+<?xml version="1.0" encoding="utf-8"?>
+<menu xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <group android:checkableBehavior="single">
+        <item
+            android:id="@+id/nav_registor"
+            android:icon="@drawable/ic_menu_camera"
+            android:title="로그인" />
+        <!--<item-->
+            <!--android:id="@+id/nav_gallery"-->
+            <!--android:icon="@drawable/ic_menu_gallery"-->
+            <!--android:title="Gallery" />-->
+        <!--<item-->
+            <!--android:id="@+id/nav_slideshow"-->
+            <!--android:icon="@drawable/ic_menu_slideshow"-->
+            <!--android:title="Slideshow" />-->
+        <!--<item-->
+            <!--android:id="@+id/nav_manage"-->
+            <!--android:icon="@drawable/ic_menu_manage"-->
+            <!--android:title="Tools" />-->
+    </group>
+
+    <!--<item android:title="Communicate">-->
+        <!--<menu>-->
+            <!--<item-->
+                <!--android:id="@+id/nav_share"-->
+                <!--android:icon="@drawable/ic_menu_share"-->
+                <!--android:title="Share" />-->
+            <!--<item-->
+                <!--android:id="@+id/nav_send"-->
+                <!--android:icon="@drawable/ic_menu_send"-->
+                <!--android:title="Send" />-->
+        <!--</menu>-->
+    <!--</item>-->
+
+</menu>
Index: app/src/main/java/com/example/admin/navi3/LoginActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/admin/navi3/LoginActivity.java	(revision )
+++ app/src/main/java/com/example/admin/navi3/LoginActivity.java	(revision )
@@ -0,0 +1,355 @@
+package com.example.admin.navi3;
+
+import android.app.ProgressDialog;
+import android.content.DialogInterface;
+import android.content.Intent;
+import android.os.AsyncTask;
+import android.os.Build;
+import android.os.Handler;
+import android.support.v7.app.AlertDialog;
+import android.support.v7.app.AppCompatActivity;
+import android.os.Bundle;
+import android.util.Log;
+import android.view.View;
+import android.webkit.CookieManager;
+import android.webkit.CookieSyncManager;
+import android.widget.Button;
+import android.widget.EditText;
+import android.widget.ProgressBar;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import com.android.volley.AuthFailureError;
+import com.android.volley.Request;
+import com.android.volley.Response;
+import com.android.volley.VolleyError;
+import com.android.volley.toolbox.StringRequest;
+
+import org.json.JSONArray;
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.io.BufferedOutputStream;
+import java.io.BufferedReader;
+import java.io.InputStreamReader;
+import java.io.OutputStream;
+import java.io.OutputStreamWriter;
+import java.io.PrintWriter;
+import java.net.HttpURLConnection;
+import java.net.URL;
+import java.util.HashMap;
+import java.util.Map;
+
+public class LoginActivity extends AppCompatActivity {
+
+    private Button ButtonLogin;
+    private EditText EditId, EditPass;
+    private ProgressBar progressBar;
+
+    //로그인액티비티
+    public static LoginActivity loginActivity;
+
+    private ProgressDialog mProgressDialog;
+    private AccessServiceAPI mServiceAccess;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_login);
+
+        loginActivity = LoginActivity.this;
+
+//        textView = (TextView)findViewById(R.id.btnRegistor);
+//        textView.setOnClickListener(new View.OnClickListener() {
+//            @Override
+//            public void onClick(View v) {
+//                Intent intent = new Intent(LoginActivity.this, Registor.class);
+//                startActivity(intent);
+//            }
+//        });
+
+//        builder = new AlertDialog.Builder(LoginActivity.this);
+
+        ButtonLogin = (Button)findViewById(R.id.btnLogin);
+        EditId = (EditText)findViewById(R.id.loginID);
+        EditPass = (EditText)findViewById(R.id.loginPassword);
+
+
+
+        ButtonLogin.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+
+                if("".equals(EditId.getText().toString())){
+                    EditId.setError("이름을 입력하세요");
+                    return;
+                }
+                if("".equals(EditPass.getText().toString())){
+                    EditPass.setError("비밀번호를 입력하세요");
+                    return;
+                }
+
+                // async task
+                new TaskLogin().execute(EditId.getText().toString(), EditPass.getText().toString());
+
+            }
+        });
+
+
+
+        progressBar = (ProgressBar)findViewById(R.id.progressBar_login);
+
+
+
+        /*btnLogin.setOnClickListener(new View.OnClickListener() {
+
+            @Override
+            public void onClick(View v) {
+
+                id = Id.getText().toString();
+                pass = Pass.getText().toString();
+
+                progressBar.setVisibility(View.VISIBLE);
+
+                if(id.equals("") || pass.equals("")){
+                    builder.setTitle("Something went wrong");
+                    displayAlert("Enter a valid ID  and PASSWORD...");
+
+                }
+                else
+                {
+
+                    StringRequest stringRequest = new StringRequest(Request.Method.POST, login_url,
+                            new Response.Listener<String>() {
+                                @Override
+                                public void onResponse(String response) {
+
+                                    try {
+                                        Log.i("json", response);
+                                        JSONArray jsonArray = new JSONArray(response);
+                                        JSONObject jsonObject = jsonArray.getJSONObject(0);
+                                        String code = jsonObject.getString("code");
+
+                                        if (code.equals("login_failed")) {
+                                            builder.setTitle("Login Error");
+                                            displayAlert(jsonObject.getString("message"));
+                                        }
+                                        else
+                                        {
+
+                                            Intent intent = new Intent(LoginActivity.this, MainActivity.class);
+                                            Bundle bundle = new Bundle();
+                                            bundle.putString( "id", jsonObject.getString("id"));
+                                            bundle.putString( "cookie", cookie );
+                                            intent.putExtras(bundle);
+                                            startActivity(intent);
+                                        }
+
+                                    } catch (JSONException e) {
+                                        e.printStackTrace();
+                                    }
+
+
+                                }
+                            }, new Response.ErrorListener() {
+                        @Override
+                        public void onErrorResponse(VolleyError error) {
+
+                        }
+                    })
+
+                     {
+                        @Override
+                        protected Map<String, String> getParams() throws AuthFailureError {
+
+                            Map<String, String> params = new HashMap<String, String>();
+                            params.put("id", id);
+                            params.put("pass", pass);
+                            return params;
+                        }
+
+                    };
+
+                    MySingleton.getmInstance(LoginActivity.this).addToRequestque(stringRequest);
+
+                }
+            }
+        });*/
+
+    }
+
+
+
+//    public void displayAlert(String message){
+//        builder.setMessage(message);
+//        builder.setPositiveButton("OK", new DialogInterface.OnClickListener() {
+//            @Override
+//            public void onClick(DialogInterface dialog, int which) {
+//                Id.setText("");
+//                Pass.setText("");
+//
+//            }
+//        });
+//
+//        AlertDialog alertDialog = builder.create();
+//        alertDialog.show();
+//    }
+
+
+    // 로그인 실패했을때 기존 값 불러오기
+    @Override
+    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
+        super.onActivityResult(requestCode, resultCode, data);
+        if(requestCode == 1){
+            EditId.setText(data.getStringExtra("id"));
+            EditPass.setText(data.getStringExtra("pass"));
+        }
+    }
+
+    public class TaskLogin extends AsyncTask<String, Void, String>{
+
+        private String id,pass;
+        @Override
+        protected void onPreExecute() {
+            super.onPreExecute();
+            //open progress dialog during login
+            mProgressDialog = ProgressDialog.show(LoginActivity.this, "기다려주세요...", "진행중입니다...", true);
+            id = EditId.getText().toString();
+            pass = EditPass.getText().toString();
+
+        }
+
+        @Override
+        protected String doInBackground(String... params) {
+//            Create data to pass in param
+//            Map<String, String> param = new HashMap<>();
+//            param.put("id", params[0]);
+//            param.put("pass", params[1]);
+//
+//            JSONObject jObjResult;
+//            try{
+//
+//                jObjResult = mServiceAccess.convertJSONString2Obj(mServiceAccess.getJSONStringWithParam_POST(Common.SERVICE_API_URL, param));
+//
+//                return jObjResult.getString("result");
+//
+//            }catch (Exception e){
+//                // 0 -> true, 1->false
+//
+//               return Common.RESULT_ERROR;
+//
+//            }
+
+
+            try {
+
+                StringBuilder outputBuilder = new StringBuilder();
+
+                URL url = new URL(Common.SERVICE_API_URL);
+                HttpURLConnection conn = (HttpURLConnection) url.openConnection();
+                conn.setConnectTimeout(5000);
+                conn.setReadTimeout(5000);
+                conn.setRequestMethod("POST");
+                conn.setRequestProperty("Content-Type", "application/x-www-form-urlencoded;charset=euc-kr");
+//                conn.setRequestProperty("Accept", "application/json");
+                conn.setDoOutput(true);
+                conn.setDoInput(true);
+
+                //쿠키생성
+                String getCookie = CookieManager.getInstance().getCookie(Common.SERVICE_API_URL.toString());
+                if(getCookie != null){
+                    Log.i("ddddddddddddddd", getCookie);
+                    conn.setRequestProperty("Cookie", getCookie);
+                }
+
+//                String setCookie = conn.getHeaderField("Set-Cookie");
+//                if(setCookie != null){
+////                    Log.i("getHeaderField", setCookie);
+//                    CookieManager.getInstance().setCookie(Common.SERVICE_API_URL.toString(), setCookie);
+//                }
+
+                StringBuffer sb = new StringBuffer();
+                sb.append("id=").append(id).append("&");
+                sb.append("pass=").append(pass);
+
+                PrintWriter pw  = new PrintWriter(new OutputStreamWriter(conn.getOutputStream(), "euc-kr"));
+                pw.write(sb.toString());
+                pw.flush();
+
+//                OutputStream os = conn.getOutputStream();
+//                os.write(sb.getChars("euc-kr"););
+
+                //스트림 버퍼 비우기
+//                os.flush();
+                // 스트림 닫기기
+//               os.close();
+
+                int resCode = conn.getResponseCode();
+                if(resCode == conn.HTTP_OK){
+                    BufferedReader reader = new BufferedReader(new InputStreamReader(conn.getInputStream(), "EUC-KR"));
+
+                    String line = null;
+                    while(true){
+                        line = reader.readLine();
+                        if(line == null){
+                            break;
+                        }
+
+                        outputBuilder.append(line + "\n");
+                    }
+
+                    pw.close();
+                    reader.close();
+                    conn.disconnect();
+
+                }
+
+                String output = outputBuilder.toString();
+
+
+                return output;
+
+            }catch(Exception e){
+                return null;
+            }
+
+        }
+
+        @Override
+        protected void onPostExecute(String json) {
+
+            super.onPostExecute(json);
+            mProgressDialog.dismiss();
+
+            try {
+                JSONArray jsonArray = new JSONArray(json);
+                JSONObject jsonObject = jsonArray.getJSONObject(0);
+                String result = jsonObject.getString("result");
+                String jsonId = jsonObject.getString("id");
+
+                Log.i("bbbbbbbbbbbbbbbbb", result);
+                Log.i("ccccccccccccccccc", jsonId);
+
+                if(result.equals("login_success"))
+                {
+//                Toast.makeText(getApplicationContext(), json, Toast.LENGTH_LONG).show();
+//                Log.i("aaaaaaaaaaaaaaaaa", json);
+                    Intent i = new Intent(getApplicationContext(), MainActivity.class);
+                    i.putExtra("id", EditId.getText().toString());
+                    startActivity(i);
+                }
+                else
+                {
+                    Toast.makeText(getApplicationContext(), "Login Fail", Toast.LENGTH_SHORT).show();
+                }
+
+            } catch (JSONException e) {
+                e.printStackTrace();
+            }
+
+
+
+        }
+    }
+
+}
Index: app/src/main/res/drawable-v21/ic_menu_share.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable-v21/ic_menu_share.xml	(revision )
+++ app/src/main/res/drawable-v21/ic_menu_share.xml	(revision )
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportHeight="24.0"
+    android:viewportWidth="24.0">
+    <path
+        android:fillColor="#FF000000"
+        android:pathData="M18,16.08c-0.76,0 -1.44,0.3 -1.96,0.77L8.91,12.7c0.05,-0.23 0.09,-0.46 0.09,-0.7s-0.04,-0.47 -0.09,-0.7l7.05,-4.11c0.54,0.5 1.25,0.81 2.04,0.81 1.66,0 3,-1.34 3,-3s-1.34,-3 -3,-3 -3,1.34 -3,3c0,0.24 0.04,0.47 0.09,0.7L8.04,9.81C7.5,9.31 6.79,9 6,9c-1.66,0 -3,1.34 -3,3s1.34,3 3,3c0.79,0 1.5,-0.31 2.04,-0.81l7.12,4.16c-0.05,0.21 -0.08,0.43 -0.08,0.65 0,1.61 1.31,2.92 2.92,2.92 1.61,0 2.92,-1.31 2.92,-2.92s-1.31,-2.92 -2.92,-2.92z" />
+</vector>
Index: app/src/main/res/values-v21/styles.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values-v21/styles.xml	(revision )
+++ app/src/main/res/values-v21/styles.xml	(revision )
@@ -0,0 +1,9 @@
+<resources>
+
+    <style name="AppTheme.NoActionBar">
+        <item name="windowActionBar">false</item>
+        <item name="windowNoTitle">true</item>
+        <item name="android:windowDrawsSystemBarBackgrounds">true</item>
+        <item name="android:statusBarColor">@android:color/transparent</item>
+    </style>
+</resources>
Index: app/src/main/res/drawable-v21/ic_menu_send.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable-v21/ic_menu_send.xml	(revision )
+++ app/src/main/res/drawable-v21/ic_menu_send.xml	(revision )
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportHeight="24.0"
+    android:viewportWidth="24.0">
+    <path
+        android:fillColor="#FF000000"
+        android:pathData="M2.01,21L23,12 2.01,3 2,10l15,2 -15,2z" />
+</vector>
Index: app/src/main/java/com/example/admin/navi3/MySingleton.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/admin/navi3/MySingleton.java	(revision )
+++ app/src/main/java/com/example/admin/navi3/MySingleton.java	(revision )
@@ -0,0 +1,42 @@
+package com.example.admin.navi3;
+
+import android.content.Context;
+
+import com.android.volley.Request;
+import com.android.volley.RequestQueue;
+import com.android.volley.toolbox.Volley;
+
+/**
+ * Created by admin on 2016-11-27.
+ */
+
+public class MySingleton {
+    private static MySingleton mInstance;
+    private RequestQueue requestQueue;
+    private static Context mContext;
+
+
+    public MySingleton(Context context) {
+        this.mContext = context;
+        this.requestQueue = getRequestQueue();
+    }
+
+    public RequestQueue getRequestQueue(){
+        if(requestQueue == null){
+            requestQueue = Volley.newRequestQueue(mContext.getApplicationContext());
+        }
+        return requestQueue;
+    }
+
+    public static synchronized MySingleton getmInstance(Context context){
+        if(mInstance==null){
+            mInstance = new MySingleton(context);
+        }
+
+        return mInstance;
+    }
+
+    public <T>void addToRequestque(Request<T> request){
+        requestQueue.add(request);
+    }
+}
Index: app/src/main/java/com/example/admin/navi3/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/admin/navi3/MainActivity.java	(revision )
+++ app/src/main/java/com/example/admin/navi3/MainActivity.java	(revision )
@@ -0,0 +1,435 @@
+package com.example.admin.navi3;
+
+import android.annotation.SuppressLint;
+import android.content.Context;
+import android.content.Intent;
+import android.graphics.Bitmap;
+import android.os.Build;
+import android.os.Bundle;
+import android.support.annotation.RequiresApi;
+import android.support.v4.widget.ContentLoadingProgressBar;
+import android.util.Log;
+import android.view.View;
+import android.support.design.widget.NavigationView;
+import android.support.v4.view.GravityCompat;
+import android.support.v4.widget.DrawerLayout;
+import android.support.v7.app.ActionBarDrawerToggle;
+import android.support.v7.app.AppCompatActivity;
+import android.support.v7.widget.Toolbar;
+import android.view.Menu;
+import android.view.MenuItem;
+import android.webkit.CookieManager;
+import android.webkit.CookieSyncManager;
+import android.webkit.WebChromeClient;
+import android.webkit.WebResourceRequest;
+import android.webkit.WebSettings;
+import android.webkit.WebView;
+import android.webkit.WebViewClient;
+import android.widget.ImageButton;
+import android.widget.ProgressBar;
+import android.widget.Toast;
+
+
+public class MainActivity extends AppCompatActivity
+        implements NavigationView.OnNavigationItemSelectedListener{
+
+    private WebView mWebView;
+    private ContentLoadingProgressBar progressBar;
+    private ProgressBar webbar;
+    private ImageButton nav_imageButton;
+    private DrawerLayout drawer;
+
+    //접속자 ID
+    private String id;
+    private String cookie;
+    private NavigationView navigationView;
+    private CloseBackPressed_Handler closeBackPressed_handler;
+
+    private String m_StrCookieData = null;
+    private CookieSyncManager m_CookieSyncManager = null;
+    private CookieManager m_CookieManager = null;
+
+    boolean mIsTimerPaused = true;
+
+    @Override
+    protected void onStart() {
+        CookieSyncManager.createInstance(this);
+        super.onStart();
+    }
+
+    @Override
+    protected void onResume() {
+
+        CookieSyncManager.getInstance().startSync();
+
+
+        if(mIsTimerPaused == false){
+            mWebView.resumeTimers();
+            mWebView.onResume();
+            mIsTimerPaused = false;
+        }
+        super.onResume();
+
+    }
+
+    @Override
+    protected void onPause() {
+
+        CookieSyncManager.getInstance().stopSync();
+
+
+
+        if(mIsTimerPaused == true){
+            mWebView.pauseTimers();
+            mWebView.onResume();
+            mIsTimerPaused=true;
+        }
+        super.onPause();
+    }
+
+    @Override
+    protected void onDestroy() {
+        mWebView.destroy();
+        super.onDestroy();
+
+    }
+
+//    public void setSyncCookie() {
+//        Log.e("surosuro", "token transfer start ---------------------------");
+//        try {
+//            List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>(2);
+//            nameValuePairs.add(new BasicNameValuePair("token", "TEST");// 넘길 파라메터 값셋팅token=TEST
+//
+//            HttpParams params = new BasicHttpParams();
+//
+//            HttpPost post = new HttpPost(domain+/androidToken.jsp");
+//            post.setParams(params);
+//            HttpResponse response = null;
+//            BasicResponseHandler myHandler = new BasicResponseHandler();
+//            String endResult = null;
+//
+//            try {
+//                post.setEntity(new UrlEncodedFormEntity(nameValuePairs));
+//            } catch (UnsupportedEncodingException e) {
+//                e.printStackTrace();
+//            }
+//
+//            try {
+//                response = httpclient.execute(post);
+//            } catch (ClientProtocolException e) {
+//                e.printStackTrace();
+//            } catch (IOException e) {
+//                e.printStackTrace();
+//            }
+//
+//            try {
+//                endResult = myHandler.handleResponse(response);
+//            } catch (HttpResponseException e) {
+//                e.printStackTrace();
+//            } catch (IOException e) {
+//                e.printStackTrace();
+//            }
+//
+//            List<Cookie> cookies = ((DefaultHttpClient)httpclient).getCookieStore().getCookies();
+//
+//            if (!cookies.isEmpty()) {
+//                for (int i = 0; i < cookies.size(); i++) {
+//                    // cookie = cookies.get(i);
+//                    String cookieString = cookies.get(i).getName() + "="
+//                            + cookies.get(i).getValue();
+//                    Log.e("surosuro", cookieString);
+//                    cookieManager.setCookie(domain, cookieString);
+//                }
+//            }
+//            Thread.sleep(500);
+//        } catch (Exception ex) {
+//            ex.printStackTrace();
+//        }
+//    }
+
+
+
+    @SuppressLint("JavascriptInterface")
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_main);
+
+        init();
+
+        progressBar.setMax(100);
+
+
+        mWebView.loadUrl("http://ppuang.co.kr?ss_id=" + id);
+
+
+        mWebView.setWebViewClient(new myWebViewClient());
+        mWebView.setWebChromeClient(new myWebChromeClient());
+
+        //웹뷰 버튼 메세지 연동
+        mWebView.addJavascriptInterface(new JavaScriptInterface(this), "Android");
+
+        //웹뷰 버튼 로그인액티비티 연동
+        mWebView.addJavascriptInterface(new JavaScriptInterface(this), "loginActivity");
+
+        navigationView.setNavigationItemSelectedListener(this);
+
+        nav_imageButton.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                drawer.closeDrawers();
+            }
+        });
+
+    }
+
+
+
+    //초기화
+    public void init(){
+
+        //로그인 액티비티 종료
+        ((LoginActivity)LoginActivity.loginActivity).finish();
+
+        //로그인 메세지
+        Bundle bundle = getIntent().getExtras();
+        id = bundle.getString("id");
+        cookie = bundle.getString("cookie");
+        Toast.makeText(getApplicationContext(), id + " 님 환영합니다.", Toast.LENGTH_SHORT).show();
+
+        //툴바 액션 init
+        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
+        setSupportActionBar(toolbar);
+
+//        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);
+//        fab.setOnClickListener(new View.OnClickListener() {
+//            @Override
+//            public void onClick(View view) {
+//                Snackbar.make(view, "Replace with your own action", Snackbar.LENGTH_LONG)
+//                        .setAction("Action", null).show();
+//            }
+//        });
+
+        //네비게이션 init
+        drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
+        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(
+                this, drawer, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);
+
+        drawer.addDrawerListener(toggle);
+        toggle.syncState();
+
+        navigationView = (NavigationView) findViewById(R.id.nav_view);
+
+        //네이게이션 이미지 버튼 닫기
+        nav_imageButton = (ImageButton)findViewById(R.id.nav_colse);
+
+        //상단 progress바
+        progressBar = (ContentLoadingProgressBar) findViewById(R.id.progressBar);
+
+        //중간 progress바
+        webbar = (ProgressBar)findViewById(R.id.web_progress);
+
+        mWebView = (WebView)findViewById(R.id.webView);
+
+        //improve webview performance
+        WebSettings webSettings = mWebView.getSettings();
+        webSettings.setJavaScriptEnabled(true);
+
+        webSettings.setRenderPriority(WebSettings.RenderPriority.HIGH);
+
+        webSettings.setLayoutAlgorithm(WebSettings.LayoutAlgorithm.NARROW_COLUMNS);
+        webSettings.setUseWideViewPort(true);
+        webSettings.setSavePassword(true);
+        webSettings.setSaveFormData(true);
+        webSettings.setEnableSmoothTransition(true);
+        webSettings.setJavaScriptEnabled(true);
+        webSettings.setBuiltInZoomControls(true);
+        webSettings.setSupportZoom(true);
+        webSettings.setUseWideViewPort(true);
+        webSettings.setLoadWithOverviewMode(true);
+
+        webSettings.setGeolocationEnabled(true);
+
+        //SUPPORT FLASH
+        webSettings.setPluginState(WebSettings.PluginState.ON);
+        webSettings.setSupportMultipleWindows(false);
+
+        //HTML5 DOM
+        webSettings.setDomStorageEnabled(true);
+
+        //HTML5 Web DB
+        webSettings.setDatabaseEnabled(true);
+        webSettings.setDatabasePath("/data/data/"+ getApplicationContext().getPackageName()+"/database");
+
+        webSettings.setCacheMode(WebSettings.LOAD_CACHE_ELSE_NETWORK);
+
+        //HTML5 App Cache
+        webSettings.setAppCacheEnabled(true);
+        webSettings.setAppCacheMaxSize(1024*1024*8);
+        webSettings.setAppCachePath("/data/data/" + getApplicationContext().getPackageName()+"/cache");
+
+        //Overlay scrollbar on top of Webcontents
+        mWebView.setVerticalScrollbarOverlay(true);
+        mWebView.setHorizontalScrollbarOverlay(true);
+
+        mWebView.setScrollBarStyle(View.SCROLLBARS_INSIDE_OVERLAY);
+
+        //종료 closebackpressed handler
+        closeBackPressed_handler = new CloseBackPressed_Handler(this);
+
+    }
+
+    @Override
+    public void onBackPressed() {
+        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
+        if (drawer.isDrawerOpen(GravityCompat.START)) {
+            drawer.closeDrawer(GravityCompat.START);
+
+        } else if(mWebView.canGoBack()) {
+            mWebView.goBack();
+        } else {
+            closeBackPressed_handler.onBackPressed();
+        }
+    }
+
+
+    @Override
+    public boolean onCreateOptionsMenu(Menu menu) {
+        // Inflate the menu; this adds items to the action bar if it is present.
+        getMenuInflater().inflate(R.menu.main, menu);
+        return true;
+    }
+
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+        // Handle action bar item clicks here. The action bar will
+        // automatically handle clicks on the Home/Up button, so long
+        // as you specify a parent activity in AndroidManifest.xml.
+        int id = item.getItemId();
+
+        //noinspection SimplifiableIfStatement
+        if (id == R.id.action_settings) {
+            return true;
+        }
+
+        return super.onOptionsItemSelected(item);
+    }
+
+    @SuppressWarnings("StatementWithEmptyBody")
+    @Override
+    public boolean onNavigationItemSelected(MenuItem item) {
+        // Handle navigation view item clicks here.
+        int id = item.getItemId();
+
+        if (id == R.id.nav_registor) {
+            // Handle the camera action
+        }
+//        else if (id == R.id.nav_gallery) {
+//
+//        } else if (id == R.id.nav_slideshow) {
+//
+//        } else if (id == R.id.nav_manage) {
+//
+//        } else if (id == R.id.nav_share) {
+//
+//        } else if (id == R.id.nav_send) {
+//
+//        }
+
+        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
+        drawer.closeDrawer(GravityCompat.START);
+        return true;
+    }
+
+    private class myWebViewClient extends WebViewClient{
+
+        @RequiresApi(api = Build.VERSION_CODES.LOLLIPOP)
+        @Override
+        public boolean shouldOverrideUrlLoading(WebView view, WebResourceRequest request) {
+
+
+//            if (request.getUrl().getHost().equals("http://ppuang.co.kr?ss_id="+id)) {
+//
+//                return false;
+//
+//            } else {
+//
+//                Intent intent = new Intent(Intent.ACTION_VIEW, request.getUrl());
+//                startActivity(intent);
+//
+                return true;
+//            }
+        }
+
+        //특정 웹페이지 이동시
+        @Override
+        public boolean shouldOverrideUrlLoading(WebView view, String url) {
+
+
+
+//            if(URLUtil.isValidUrl(url) == false){ //URI is not loading is webview
+//                Uri uri = Uri.parse(url);
+//                if(uri.getScheme().equals("sms") || uri.getScheme().equals("mailto")){
+//                    Intent intent = new Intent(Intent.ACTION_SEND);
+//                    intent.setData(uri);
+//                    view.getContext().startActivity(intent);
+//                }else{
+//                    Intent intent = new Intent(Intent.ACTION_VIEW);
+//                    intent.setData(uri);
+//                    view.getContext().startActivity(intent);
+//                }
+//                return true;
+//            } else{
+//                Uri uri = Uri.parse(url);
+//                if(uri.getHost().equals("play.google.com") == true && uri.getPath().equals("store/apps/details")){
+//                    Intent marketIntent = new Intent(Intent.ACTION_VIEW);
+//                    marketIntent.setData(Uri.parse("market://deails?id=" + uri.getQueryParameter("id")));
+//                    view.getContext().startActivity(marketIntent);
+//                    return true;
+//                }
+//            }
+
+//            view.loadUrl(url);
+//            return true;
+            return true;
+        }
+
+        @Override
+        public void onPageStarted(WebView view, String url, Bitmap favicon) {
+
+//            CookieSyncManager.getInstance().sync();
+
+            super.onPageStarted(view, url, favicon);
+        }
+
+        @Override
+        public void onPageFinished(WebView view, String url) {
+
+            CookieSyncManager.getInstance().sync();
+            super.onPageFinished(view, url);
+        }
+    }
+
+    private class myWebChromeClient extends WebChromeClient{
+
+        @Override
+        public void onProgressChanged(WebView view, int newProgress) {
+            super.onProgressChanged(view, newProgress);
+
+            progressBar.setProgress(newProgress);
+            if (newProgress <= 99) {
+                progressBar.setVisibility(View.VISIBLE);
+            } else if(newProgress == 100){
+                progressBar.setVisibility(View.GONE);
+            }
+        }
+    }
+
+    public class avaScriptInterface{
+        private Context mContext;
+
+    }
+
+
+
+}
Index: app/src/main/res/layout/content_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/content_main.xml	(revision )
+++ app/src/main/res/layout/content_main.xml	(revision )
@@ -0,0 +1,49 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:id="@+id/content_main"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    app:layout_behavior="@string/appbar_scrolling_view_behavior"
+    tools:context="com.example.admin.navi3.MainActivity"
+    tools:showIn="@layout/app_bar_main">
+
+
+
+
+    <WebView
+        android:id="@+id/webView"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:layout_alignParentTop="true" >
+
+    <RelativeLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent">
+
+        <android.support.v4.widget.ContentLoadingProgressBar
+            android:id="@+id/progressBar"
+            style="?android:attr/progressBarStyleHorizontal"
+            android:layout_width="match_parent"
+            android:layout_height="3dp"
+            android:layout_alignParentTop="true"
+            android:progressBackgroundTint="@color/colorPrimary"
+            android:progressTint="@android:color/darker_gray"
+            android:visibility="gone"/>
+
+        <ProgressBar
+            android:id="@+id/web_progress"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:visibility="gone"
+            android:layout_centerHorizontal="true"
+            android:layout_centerVertical="true"
+            android:indeterminate="true" />
+
+    </RelativeLayout>
+
+    </WebView>
+
+
+</RelativeLayout>
Index: app/src/main/java/com/example/admin/navi3/AccessServiceAPI.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/admin/navi3/AccessServiceAPI.java	(revision )
+++ app/src/main/java/com/example/admin/navi3/AccessServiceAPI.java	(revision )
@@ -0,0 +1,213 @@
+package com.example.admin.navi3;
+
+import android.util.Log;
+
+import org.json.JSONArray;
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.io.BufferedReader;
+import java.io.IOException;
+import java.io.InputStreamReader;
+import java.io.OutputStream;
+import java.net.HttpURLConnection;
+import java.net.MalformedURLException;
+import java.net.ProtocolException;
+import java.net.URL;
+import java.util.Iterator;
+import java.util.Map;
+
+/**
+ * Created by admin on 2016-12-05.
+ */
+
+public class AccessServiceAPI {
+
+
+    public String getJSONStringFromUrl_GET(String url){
+
+        JSONArray jsonArray = null;
+        HttpURLConnection httpURLConnection = null;
+        BufferedReader bufferedReader;
+        StringBuilder stringBuilder;
+        String line;
+        String jsonString = "";
+
+        try{
+            URL u = new URL(url);
+            httpURLConnection = (HttpURLConnection)u.openConnection();
+            httpURLConnection.setRequestMethod("GET");
+            bufferedReader = new BufferedReader(new InputStreamReader(httpURLConnection.getInputStream()));
+            stringBuilder = new StringBuilder();
+
+            while((line = bufferedReader.readLine()) != null){
+                stringBuilder.append(line+'\n');
+            }
+            jsonString = stringBuilder.toString();
+
+        }catch(MalformedURLException e){
+            e.printStackTrace();
+        }catch (ProtocolException e){
+            e.printStackTrace();
+        }catch (Exception e){
+            e.printStackTrace();
+        }finally {
+
+            httpURLConnection.disconnect();
+        }
+        return jsonString;
+    }
+
+    public JSONObject convertJSONString2Obj(String jsonString){
+        JSONObject jObj = null;
+
+        try{
+
+            Log.w("convertJSONString2Obj", "JsonString=" + jsonString);
+            jObj = new JSONObject(jsonString);
+
+        }catch(JSONException e){
+            e.printStackTrace();
+        }
+        return jObj;
+    }
+
+    public String getJSONStringWithParam_POST(String serviceUrl, Map<String, String> params) throws IOException{
+        JSONArray jsonArray = null;
+        String jsonString = null;
+        HttpURLConnection conn = null;
+        String line;
+
+        URL url;
+
+        try{
+            url = new URL(serviceUrl);
+        }
+        catch (MalformedURLException e){
+            throw new IllegalArgumentException("invalid url: " + serviceUrl);
+        }
+
+        StringBuilder bodyBuilder = new StringBuilder();
+        Iterator<Map.Entry<String, String>> iterator = params.entrySet().iterator();
+
+        while(iterator.hasNext())
+        {
+            Map.Entry<String, String> param = iterator.next();
+            bodyBuilder.append(param.getKey()).append('=').append(param.getValue());
+            if(iterator.hasNext()){
+                bodyBuilder.append('&');
+            }
+        }
+
+        String body = bodyBuilder.toString();
+        Log.w("getJSONStringWithParam", "param=>" + body);
+
+        byte[] bytes = body.getBytes();
+
+        try{
+            conn = (HttpURLConnection)url.openConnection();
+            conn.setDoOutput(true);
+            conn.setUseCaches(false);
+            conn.setFixedLengthStreamingMode(bytes.length);
+            conn.setRequestMethod("POST");
+            conn.setRequestProperty("Content-Type", "application/x-www-form-urlencoded; charset=UTF-8");
+
+            OutputStream out = conn.getOutputStream();
+            out.write(bytes);
+            out.close();
+
+            int status = conn.getResponseCode();
+
+            Log.w("getJSONStringWithParam", "Response Status = " + status);
+            if(status != 200){
+                throw new IOException("Post failed with error code" + status);
+            }
+
+            BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(conn.getInputStream()));
+            StringBuilder stringBuilder = new StringBuilder();
+
+            while((line = bufferedReader.readLine()) != null){
+                stringBuilder.append(line + '\n');
+            }
+
+            jsonString = stringBuilder.toString();
+
+        }catch (MalformedURLException e){
+            e.printStackTrace();
+        }catch (ProtocolException e){
+            e.printStackTrace();
+        }catch (Exception e){
+            e.printStackTrace();
+        }finally {
+
+            conn.disconnect();
+        }
+        return jsonString;
+
+    }
+
+    public String getJSONStringWithParam_POST(String serviceUrl, String params) throws IOException{
+        JSONArray jsonArray = null;
+        String jsonString = null;
+        HttpURLConnection conn = null;
+        String line;
+
+        URL url;
+        try{
+            url = new URL(serviceUrl);
+
+        }catch(MalformedURLException e){
+
+            throw new IllegalArgumentException("invalid url: " + serviceUrl);
+
+        }
+
+        Log.w("getJSONStringWithParam", "param=>" + params);
+        byte[] bytes = params.getBytes();
+        try{
+
+            conn = (HttpURLConnection)url.openConnection();
+            conn.setDoOutput(true);
+            conn.setUseCaches(false);
+            conn.setFixedLengthStreamingMode(bytes.length);
+            conn.setRequestMethod("POST");
+            conn.setRequestProperty("Content-Type", "application/json");
+            conn.connect();
+
+            OutputStream out = conn.getOutputStream();
+            out.write(bytes);
+            out.close();
+
+            int status = conn.getResponseCode();
+
+            Log.w("getJSONStringWithParam", "Response Status = " + status);
+            if(status != 200){
+                throw new IOException("Post failed with error code" + status);
+            }
+
+            BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(conn.getInputStream()));
+            StringBuilder stringBuilder = new StringBuilder();
+
+            while((line = bufferedReader.readLine()) != null)
+            {
+                stringBuilder.append(line + '\n');
+            }
+
+            jsonString = stringBuilder.toString();
+
+        }catch (MalformedURLException e) {
+            e.printStackTrace();
+        } catch (ProtocolException e) {
+            e.printStackTrace();
+        } catch (IOException e) {
+            e.printStackTrace();
+        } finally {
+            conn.disconnect();
+        }
+
+        return jsonString;
+
+    }
+
+
+}
Index: app/src/main/res/drawable-v21/ic_menu_camera.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable-v21/ic_menu_camera.xml	(revision )
+++ app/src/main/res/drawable-v21/ic_menu_camera.xml	(revision )
@@ -0,0 +1,12 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportHeight="24.0"
+    android:viewportWidth="24.0">
+    <path
+        android:fillColor="#FF000000"
+        android:pathData="M12,12m-3.2,0a3.2,3.2 0,1 1,6.4 0a3.2,3.2 0,1 1,-6.4 0" />
+    <path
+        android:fillColor="#FF000000"
+        android:pathData="M9,2L7.17,4H4c-1.1,0 -2,0.9 -2,2v12c0,1.1 0.9,2 2,2h16c1.1,0 2,-0.9 2,-2V6c0,-1.1 -0.9,-2 -2,-2h-3.17L15,2H9zm3,15c-2.76,0 -5,-2.24 -5,-5s2.24,-5 5,-5 5,2.24 5,5 -2.24,5 -5,5z" />
+</vector>
Index: app/src/main/res/layout/activity_registor.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_registor.xml	(revision )
+++ app/src/main/res/layout/activity_registor.xml	(revision )
@@ -0,0 +1,69 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:id="@+id/activity_registor"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:paddingBottom="@dimen/activity_vertical_margin"
+    android:paddingLeft="@dimen/activity_horizontal_margin"
+    android:paddingRight="@dimen/activity_horizontal_margin"
+    android:paddingTop="@dimen/activity_vertical_margin"
+    android:background="@color/registorBackground"
+    android:orientation="vertical"
+    tools:context="com.example.admin.navi3.LoginActivity">
+
+    <TextView
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:gravity="center_horizontal"
+        android:layout_marginTop="50dp"
+        android:text="Thank you for registor"
+        android:textSize="30sp"
+        android:padding="20dp"
+        android:textColor="@color/white"/>
+
+    <EditText
+        android:layout_width="300dp"
+        android:layout_height="50dp"
+        android:id="@+id/regID"
+        android:inputType="text"
+        android:gravity="center"
+        android:layout_gravity="center_horizontal"
+        android:layout_marginTop="10dp"
+        android:hint="ID"
+        android:background="@color/white"/>
+
+
+    <EditText
+        android:layout_width="300dp"
+        android:layout_height="50dp"
+        android:id="@+id/regPassword"
+        android:inputType="textPassword"
+        android:gravity="center"
+        android:layout_gravity="center_horizontal"
+        android:layout_marginTop="10dp"
+        android:hint="Password"
+        android:background="@color/white"/>
+
+    <EditText
+        android:layout_width="300dp"
+        android:layout_height="50dp"
+        android:id="@+id/confirmPassword"
+        android:hint="confrimPassword"
+        android:inputType="textPassword"
+        android:gravity="center"
+        android:layout_gravity="center_horizontal"
+        android:layout_marginTop="10dp"
+        android:background="@color/white"/>
+
+    <Button
+        android:layout_width="150dp"
+        android:layout_height="50dp"
+        android:id="@+id/btnRegistor"
+        android:gravity="center"
+        android:layout_gravity="center_horizontal"
+        android:layout_marginTop="30dp"
+        android:text="Registor"/>
+
+
+</LinearLayout>
Index: app/src/main/res/menu/main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/menu/main.xml	(revision )
+++ app/src/main/res/menu/main.xml	(revision )
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="utf-8"?>
+<menu xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto">
+    <item
+        android:id="@+id/action_settings"
+        android:orderInCategory="100"
+        android:title="@string/action_settings"
+        app:showAsAction="never" />
+</menu>
Index: app/src/main/java/com/example/admin/navi3/JavaScriptInterface.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/admin/navi3/JavaScriptInterface.java	(revision )
+++ app/src/main/java/com/example/admin/navi3/JavaScriptInterface.java	(revision )
@@ -0,0 +1,32 @@
+package com.example.admin.navi3;
+
+import android.app.Activity;
+import android.content.Context;
+import android.content.Intent;
+import android.support.v7.app.AppCompatActivity;
+import android.webkit.JavascriptInterface;
+import android.widget.Toast;
+
+/**
+ * Created by admin on 2016-12-06.
+ */
+public class JavaScriptInterface {
+    private Context mContext;
+
+    JavaScriptInterface(Context context) {
+        mContext = context;
+    }
+
+    @JavascriptInterface
+    public void showToast(String toast){
+
+        Toast.makeText(mContext, toast, Toast.LENGTH_SHORT).show();
+
+    }
+
+    @JavascriptInterface
+    public void callLoginActivity(){
+        Intent intent = new Intent(mContext, LoginActivity.class);
+        mContext.startActivity(intent);
+    }
+}
Index: app/src/main/res/drawable/side_nav_bar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/side_nav_bar.xml	(revision )
+++ app/src/main/res/drawable/side_nav_bar.xml	(revision )
@@ -0,0 +1,9 @@
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="rectangle">
+    <gradient
+        android:angle="135"
+        android:centerColor="#4CAF50"
+        android:endColor="#2E7D32"
+        android:startColor="#81C784"
+        android:type="linear" />
+</shape>
\ No newline at end of file
Index: app/src/main/java/com/example/admin/navi3/CloseBackPressed_Handler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/admin/navi3/CloseBackPressed_Handler.java	(revision )
+++ app/src/main/java/com/example/admin/navi3/CloseBackPressed_Handler.java	(revision )
@@ -0,0 +1,30 @@
+package com.example.admin.navi3;
+
+import android.app.Activity;
+import android.widget.Toast;
+
+/**
+ * Created by admin on 2016-11-29.
+ */
+
+public class CloseBackPressed_Handler {
+
+    private long BackKeyPressedTime = 0;
+    private Activity activity;
+    private Toast toast;
+
+    public CloseBackPressed_Handler(Activity activity) {
+        this.activity = activity;
+    }
+
+    public void onBackPressed(){
+        if(System.currentTimeMillis() > BackKeyPressedTime + 2000){
+            BackKeyPressedTime = System.currentTimeMillis();
+            Toast.makeText(activity, "\'뒤로\' 버튼을 한번 더 누르시면 종료됩니다.", Toast.LENGTH_SHORT).show();
+
+        } else if(System.currentTimeMillis() <= BackKeyPressedTime + 2000){
+            activity.finish();
+        }
+    }
+}
+
Index: app/src/main/java/com/example/admin/navi3/Registor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/admin/navi3/Registor.java	(revision )
+++ app/src/main/java/com/example/admin/navi3/Registor.java	(revision )
@@ -0,0 +1,135 @@
+package com.example.admin.navi3;
+
+import android.content.Context;
+import android.content.DialogInterface;
+import android.support.v7.app.AlertDialog;
+import android.support.v7.app.AppCompatActivity;
+import android.os.Bundle;
+import android.view.View;
+import android.widget.Button;
+import android.widget.EditText;
+
+import com.android.volley.AuthFailureError;
+import com.android.volley.Request;
+import com.android.volley.Response;
+import com.android.volley.VolleyError;
+import com.android.volley.toolbox.RequestFuture;
+import com.android.volley.toolbox.StringRequest;
+
+import org.json.JSONArray;
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.util.HashMap;
+import java.util.Map;
+
+public class Registor extends AppCompatActivity {
+
+    Button btnReg;
+    EditText Id,Pass,ConPass;
+    String id,pass,conpass;
+    AlertDialog.Builder builder;
+    String reg_url = "http://rukusmin.ppuang.co.kr/login/register.php";
+
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_registor);
+
+//        btnReg = (Button)findViewById(R.id.btnRegistor);
+//
+//        Id = (EditText)findViewById(R.id.regID);
+//        Pass = (EditText)findViewById(R.id.regPassword);
+//        ConPass = (EditText)findViewById(R.id.confirmPassword);
+//
+//        builder = new AlertDialog.Builder(this);
+//
+//        btnReg.setOnClickListener(new View.OnClickListener() {
+//            @Override
+//            public void onClick(View v) {
+//                id = Id.getText().toString();
+//                pass = Pass.getText().toString();
+//                conpass = ConPass.getText().toString();
+//
+//                if(id.equals("") || pass.equals("") || conpass.equals("")){
+//                    builder.setTitle("Something went wrong...");
+//                    builder.setMessage("Please fill all the fields...");
+//                    displayAlert("input_error");
+//                }
+//                else
+//                {
+//                    if(!(pass.equals(conpass))){
+//                        builder.setTitle("Somethins went wrong...");
+//                        builder.setMessage("your passwords are not matching...");
+//                        displayAlert("input_error");
+//                    }
+//                    else
+//                    {
+//                        StringRequest stringRequest = new StringRequest(Request.Method.POST, reg_url,
+//                                new Response.Listener<String>() {
+//                                    @Override
+//                                    public void onResponse(String response) {
+//                                        try {
+//                                            JSONArray jsonArray = new JSONArray(response);
+//                                            JSONObject jsonObject = jsonArray.getJSONObject(0);
+//                                            String code = jsonObject.getString("code");
+//                                            String message = jsonObject.getString("message");
+//                                            builder.setTitle("server response");
+//                                            builder.setMessage(message);
+//                                            displayAlert(code);
+//                                        } catch (JSONException e) {
+//                                            e.printStackTrace();
+//                                        }
+//
+//
+//                                    }
+//                                }, new Response.ErrorListener() {
+//                            @Override
+//                            public void onErrorResponse(VolleyError error) {
+//
+//                            }
+//                        })
+//
+//                        {
+//                            @Override
+//                            protected Map<String, String> getParams() throws AuthFailureError {
+//                                Map<String, String> params = new HashMap<String, String>();
+//                                params.put("id", id);
+//                                params.put("password", pass);
+//                                return params;
+//                            }
+//                        };
+//
+//                        MySingleton.getmInstance(Registor.this).addToRequestque(stringRequest);
+//                    }
+//
+//                }
+//            }
+//        });
+//
+//    }
+//
+//    public void displayAlert(final String code){
+//        builder.setPositiveButton("OK", new DialogInterface.OnClickListener() {
+//            @Override
+//            public void onClick(DialogInterface dialog, int which) {
+//                if(code.equals("input_error")){
+//                    Pass.setText("");
+//                    ConPass.setText("");
+//                }
+//                else if(code.equals("reg_success")){
+//                    finish();
+//                }
+//                else if(code.equals("reg_failed")){
+//                    Id.setText("");
+//                    Pass.setText("");
+//                }
+//            }
+//        });
+//
+//        AlertDialog alertDialog = builder.create();
+//        alertDialog.show();
+//
+    }
+}
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision )
+++ app/src/main/AndroidManifest.xml	(revision )
@@ -0,0 +1,42 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.example.admin.navi3">
+
+    //웹뷰 퍼미션
+    <uses-permission android:name="android.permission.INTERNET" />
+    //읽기만 할때 사용하는 퍼미션
+    <!--<uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>-->
+    //읽고 쓰기 할대 사용하는 퍼미션
+    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
+    
+
+    <application
+        android:allowBackup="true"
+        android:icon="@mipmap/ic_launcher"
+        android:label="@string/app_name"
+        android:supportsRtl="true"
+        android:theme="@style/AppTheme"
+        android:hardwareAccelerated="true">
+
+
+        <activity
+            android:name=".MainActivity"
+            android:label="@string/app_name"
+            android:theme="@style/AppTheme.NoActionBar">
+
+        </activity>
+
+
+        <activity android:name=".LoginActivity" >
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+
+                <category android:name="android.intent.category.LAUNCHER" />
+            </intent-filter>
+
+            </activity>
+
+        <activity android:name=".Registor"></activity>
+    </application>
+
+</manifest>
\ No newline at end of file
Index: app/src/main/res/values/colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/colors.xml	(revision )
+++ app/src/main/res/values/colors.xml	(revision )
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <color name="colorPrimary">#51b49f</color>
+    <color name="colorPrimaryDark">#43897a</color>
+    <color name="colorAccent">#FF4081</color>
+    <color name="white">#FFFFFF</color>
+
+    <color name="registorBackground">#51b49f</color>
+</resources>
Index: app/proguard-rules.pro
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/proguard-rules.pro	(revision )
+++ app/proguard-rules.pro	(revision )
@@ -0,0 +1,17 @@
+# Add project specific ProGuard rules here.
+# By default, the flags in this file are appended to flags specified
+# in C:\Users\admin\AppData\Local\Android\Sdk/tools/proguard/proguard-android.txt
+# You can edit the include path and order by changing the proguardFiles
+# directive in build.gradle.
+#
+# For more details, see
+#   http://developer.android.com/guide/developing/tools/proguard.html
+
+# Add any project specific keep options here:
+
+# If your project uses WebView with JS, uncomment the following
+# and specify the fully qualified class name to the JavaScript interface
+# class:
+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
+#   public *;
+#}
Index: app/src/main/res/values-w820dp/dimens.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values-w820dp/dimens.xml	(revision )
+++ app/src/main/res/values-w820dp/dimens.xml	(revision )
@@ -0,0 +1,6 @@
+<resources>
+    <!-- Example customization of dimensions originally defined in res/values/dimens.xml
+         (such as screen margins) for screens with more than 820dp of available width. This
+         would include 7" and 10" devices in landscape (~960dp and ~1280dp respectively). -->
+    <dimen name="activity_horizontal_margin">64dp</dimen>
+</resources>
Index: app/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/.gitignore	(revision )
+++ app/.gitignore	(revision )
@@ -0,0 +1,1 @@
+/build
Index: app/src/main/java/com/example/admin/navi3/Common.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/admin/navi3/Common.java	(revision )
+++ app/src/main/java/com/example/admin/navi3/Common.java	(revision )
@@ -0,0 +1,12 @@
+package com.example.admin.navi3;
+
+/**
+ * Created by admin on 2016-12-06.
+ */
+
+public class Common {
+    static final String SERVICE_API_URL = "http://ppuang.co.kr/ajax/login/login_chk.php?type=app";
+    static final String RESULT_SUCCESS = "Success";
+    static final String RESULT_ERROR = "ERROR";
+    static final int RESULT_USER_EXISTS = 2;
+}
Index: app/src/androidTest/java/com/example/admin/navi3/ExampleInstrumentedTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/androidTest/java/com/example/admin/navi3/ExampleInstrumentedTest.java	(revision )
+++ app/src/androidTest/java/com/example/admin/navi3/ExampleInstrumentedTest.java	(revision )
@@ -0,0 +1,26 @@
+package com.example.admin.navi3;
+
+import android.content.Context;
+import android.support.test.InstrumentationRegistry;
+import android.support.test.runner.AndroidJUnit4;
+
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import static org.junit.Assert.*;
+
+/**
+ * Instrumentation test, which will execute on an Android device.
+ *
+ * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
+ */
+@RunWith(AndroidJUnit4.class)
+public class ExampleInstrumentedTest {
+    @Test
+    public void useAppContext() throws Exception {
+        // Context of the app under test.
+        Context appContext = InstrumentationRegistry.getTargetContext();
+
+        assertEquals("com.example.admin.navi3", appContext.getPackageName());
+    }
+}
Index: app/src/main/res/drawable-v21/ic_menu_manage.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable-v21/ic_menu_manage.xml	(revision )
+++ app/src/main/res/drawable-v21/ic_menu_manage.xml	(revision )
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportHeight="24.0"
+    android:viewportWidth="24.0">
+    <path
+        android:fillColor="#FF000000"
+        android:pathData="M22.7,19l-9.1,-9.1c0.9,-2.3 0.4,-5 -1.5,-6.9 -2,-2 -5,-2.4 -7.4,-1.3L9,6 6,9 1.6,4.7C0.4,7.1 0.9,10.1 2.9,12.1c1.9,1.9 4.6,2.4 6.9,1.5l9.1,9.1c0.4,0.4 1,0.4 1.4,0l2.3,-2.3c0.5,-0.4 0.5,-1.1 0.1,-1.4z" />
+</vector>
\ No newline at end of file
Index: app/src/main/res/layout/activity_login.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_login.xml	(revision )
+++ app/src/main/res/layout/activity_login.xml	(revision )
@@ -0,0 +1,92 @@
+<?xml version="1.0" encoding="utf-8"?>
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:id="@+id/activity_login"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:paddingBottom="@dimen/activity_vertical_margin"
+    android:paddingLeft="@dimen/activity_horizontal_margin"
+    android:paddingRight="@dimen/activity_horizontal_margin"
+    android:paddingTop="@dimen/activity_vertical_margin"
+    android:background="@color/registorBackground"
+    tools:context="com.example.admin.navi3.LoginActivity">
+
+
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:orientation="vertical">
+
+        <TextView
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:gravity="center_horizontal"
+            android:layout_marginTop="50dp"
+            android:text="This is PPUANG welcome to people"
+            android:textSize="30sp"
+            android:padding="20dp"
+            android:textColor="@color/white"/>
+
+        <EditText
+                android:layout_width="300dp"
+                android:layout_height="50dp"
+                android:id="@+id/loginID"
+                android:inputType="text"
+                android:gravity="center"
+                android:layout_gravity="center_horizontal"
+                android:layout_marginTop="10dp"
+                android:hint="ID"
+                android:background="@color/white"/>
+
+        <EditText
+                android:layout_width="300dp"
+                android:layout_height="50dp"
+                android:id="@+id/loginPassword"
+                android:inputType="textPassword"
+                android:gravity="center"
+                android:layout_gravity="center_horizontal"
+                android:layout_marginTop="10dp"
+                android:hint="Password"
+                android:background="@color/white"/>
+
+            <Button
+                android:layout_width="150dp"
+                android:layout_height="50dp"
+                android:id="@+id/btnLogin"
+                android:gravity="center"
+                android:layout_gravity="center_horizontal"
+                android:layout_marginTop="30dp"
+                android:text="Login"/>
+
+    </LinearLayout>
+
+    <RelativeLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent" >
+
+        <ProgressBar
+            android:id="@+id/progressBar_login"
+            android:layout_width="match_parent"
+            android:layout_height="50dp"
+            android:layout_centerVertical="true"
+            android:layout_alignParentLeft="true"
+            android:layout_alignParentStart="true"
+            android:visibility="gone"
+            android:indeterminate="true"/>
+
+    </RelativeLayout>
+
+
+    <!--<Button-->
+        <!--android:layout_width="150dp"-->
+        <!--android:layout_height="50dp"-->
+        <!--android:id="@+id/btnJoin"-->
+        <!--android:gravity="center"-->
+        <!--android:layout_gravity="center_horizontal"-->
+        <!--android:text="Join"-->
+        <!--android:layout_marginTop="5dp"/>-->
+
+
+</FrameLayout>
+
Index: app/src/main/res/values/dimens.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/dimens.xml	(revision )
+++ app/src/main/res/values/dimens.xml	(revision )
@@ -0,0 +1,9 @@
+<resources>
+    <!-- Default screen margins, per the Android Design guidelines. -->
+    <dimen name="nav_header_vertical_spacing">16dp</dimen>
+    <dimen name="nav_header_height">160dp</dimen>
+    <!-- Default screen margins, per the Android Design guidelines. -->
+    <dimen name="activity_horizontal_margin">16dp</dimen>
+    <dimen name="activity_vertical_margin">16dp</dimen>
+    <dimen name="fab_margin">16dp</dimen>
+</resources>
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision )
+++ app/build.gradle	(revision )
@@ -0,0 +1,29 @@
+apply plugin: 'com.android.application'
+android {
+    compileSdkVersion 24
+    buildToolsVersion "25.0.0"
+    defaultConfig {
+        applicationId "com.example.admin.navi3"
+        minSdkVersion 16
+        targetSdkVersion 24
+        versionCode 1
+        versionName "1.0"
+        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
+    }
+    buildTypes {
+        release {
+            minifyEnabled false
+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
+        }
+    }
+}
+dependencies {
+    compile fileTree(include: ['*.jar'], dir: 'libs')
+    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
+        exclude group: 'com.android.support', module: 'support-annotations'
+    })
+    compile 'com.android.support:appcompat-v7:24.2.1'
+    compile 'com.android.support:design:24.2.1'
+    compile 'com.android.volley:volley:1.0.0'
+    testCompile 'junit:junit:4.12'
+}
Index: app/src/main/res/values/styles.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/styles.xml	(revision )
+++ app/src/main/res/values/styles.xml	(revision )
@@ -0,0 +1,20 @@
+<resources>
+
+    <!-- Base application theme. -->
+    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
+        <!-- Customize your theme here. -->
+        <item name="colorPrimary">@color/colorPrimary</item>
+        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
+        <item name="colorAccent">@color/colorAccent</item>
+    </style>
+
+    <style name="AppTheme.NoActionBar">
+        <item name="windowActionBar">false</item>
+        <item name="windowNoTitle">true</item>
+    </style>
+
+    <style name="AppTheme.AppBarOverlay" parent="ThemeOverlay.AppCompat.Dark.ActionBar" />
+
+    <style name="AppTheme.PopupOverlay" parent="ThemeOverlay.AppCompat.Light" />
+
+</resources>
Index: app/src/main/res/drawable-v21/ic_menu_slideshow.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable-v21/ic_menu_slideshow.xml	(revision )
+++ app/src/main/res/drawable-v21/ic_menu_slideshow.xml	(revision )
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportHeight="24.0"
+    android:viewportWidth="24.0">
+    <path
+        android:fillColor="#FF000000"
+        android:pathData="M4,6H2v14c0,1.1 0.9,2 2,2h14v-2H4V6zm16,-4H8c-1.1,0 -2,0.9 -2,2v12c0,1.1 0.9,2 2,2h12c1.1,0 2,-0.9 2,-2V4c0,-1.1 -0.9,-2 -2,-2zm-8,12.5v-9l6,4.5 -6,4.5z" />
+</vector>
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/strings.xml	(revision )
+++ app/src/main/res/values/strings.xml	(revision )
@@ -0,0 +1,10 @@
+<resources>
+    <string name="app_name">PPUANG</string>
+
+    <string name="navigation_drawer_open">Open navigation drawer</string>
+    <string name="navigation_drawer_close">Close navigation drawer</string>
+
+    <string name="action_settings">Settings</string>
+
+    <string name="hint_search_type_url">Search type URL</string>
+</resources>
Index: app/src/test/java/com/example/admin/navi3/ExampleUnitTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/test/java/com/example/admin/navi3/ExampleUnitTest.java	(revision )
+++ app/src/test/java/com/example/admin/navi3/ExampleUnitTest.java	(revision )
@@ -0,0 +1,17 @@
+package com.example.admin.navi3;
+
+import org.junit.Test;
+
+import static org.junit.Assert.*;
+
+/**
+ * Example local unit test, which will execute on the development machine (host).
+ *
+ * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
+ */
+public class ExampleUnitTest {
+    @Test
+    public void addition_isCorrect() throws Exception {
+        assertEquals(4, 2 + 2);
+    }
+}
\ No newline at end of file
